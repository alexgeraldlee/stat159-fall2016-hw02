qqplot(size_50, x_values)
title(main = "sample size = 50")
size_100 <- rnorm(n = 100)
qqplot(size_100, x_values)
title(main = "sample size = 100")
qqplot(x_values. size_50)
qqplot(x_values, size_50)
qqplot(x_values, size_25)
qqplot(x_values, size_100)
??Chisquare
size_25 <- rchisq(n = 25)
qqplot(x_values, size_25)
title(main = "sample size = 25")
size_50 <- rchisq(n = 50)
qqplot(x_values, size_50)
title(main = "sample size = 50")
size_100 <- rchisq(n = 100)
qqplot(x_values, size_100)
title(main = "sample size = 100")
size_25 <- rnorm(n = 25)
qqplot(x_values, size_25)
title(main = "sample size = 25")
size_25 <- rnorm(n = 25)
qqplot(x_values, size_25)
title(main = "sample size = 25, normal")
size_50 <- rnorm(n = 50)
qqplot(x_values, size_50)
title(main = "sample size = 50, normal")
size_100 <- rnorm(n = 100)
qqplot(x_values, size_100)
title(main = "sample size = 100, normal")
pois <- c(1, 5, 10, 15, 20, 30, 50)
pois_data <- data.frame(group = gl(n=7, k=15, length=15*7,
labels = as.character(pois)))
counts <- numeric(0)
for(i in 1:7){
counts <- append(counts, rpois(15, pois[i]))
}
pois_data$counts <- counts
#zero-sum constraint
options(contrasts = c("contr.sum", "contr.poly"))
#take ANOVA
summary(aov(counts ~ group, data = pois_data))
#residual vs. fitted plot
two_way <- lm(counts ~ group, data = pois_data)
plot(fitted(two_way), residuals(two_way),
main = "Residuals vs. Fitted Plot",
xlab = "Fitted values",
ylab = "Residuals")
##########
# 2d) Simulate 10,000 Poisson
##########
pois_10000 <- data.frame(rpois(10000, 1), rpois(10000, 5), rpois(10000, 10),
rpois(10000, 15), rpois(10000, 20), rpois(10000, 30),
rpois(10000, 50))
names(pois_10000) <- as.character(pois)
pois_10000sqrt <- sqrt(pois_10000)
pois_vars <- 0
for(i in 1:length(pois_10000sqrt[1,])){
pois_vars[i] <- var(pois_10000sqrt[,i])
}
names(pois_vars) <- as.character(pois)
##########
# 2e) Analyze the transform
##########
pois_datasqrt <- data.frame(group = gl(n=7, k=15, length=15*7,
labels = as.character(pois)))
pois_datasqrt[,2] <- sqrt(pois_data[,2])
names(pois_datasqrt) <- c("group", "count")
two_way_sqrt <- lm(counts ~ group, data = pois_datasqrt)
plot(fitted(two_way_sqrt), residuals(two_way_sqrt),
main = "Residuals vs. Fitted Plot",
xlab = "Fitted values",
ylab = "Residuals")
x_values <- seq(from=0, to=10, length.out=15*7)
qqplot(x = x_values, y = pois_datasqrt[,2] - mean(pois_datasqrt[,2]))
title(main = "QQplot of transformed data")
multinomial_gof <- function(data, expected){
total <- 0
for(i in 1:length(data)){
sq_diff <- data[i] - expected[i]
sq_diff <- sq_diff ^ 2
total <- total + sq_diff / expected[i]
}
return(total)
}
suicides <- c(1867, 1789, 1944, 2094, 2097, 1981, 1887, 2024, 1928, 2032, 1978, 1859)
days <- c(31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31)
probabilities <- days / 365
multinomial_gof(suicides, probabilities * sum(suicides))
size_100 <- rnorm(n = 100)
qqplot(x_values, size_100)
title(main = "sample size = 100, normal")
size_100 <- rnorm(n = 100)
qqplot(x_values, size_100)
title(main = "sample size = 100, normal")
multinomial_gof <- function(data, expected){
total <- 0
for(i in 1:length(data)){
sq_diff <- data[i] - expected[i]
sq_diff <- sq_diff ^ 2
total <- total + sq_diff / expected[i]
}
return(total)
}
suicides <- c(1867, 1789, 1944, 2094, 2097, 1981, 1887, 2024, 1928, 2032, 1978, 1859)
days <- c(31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31)
probabilities <- days / 365
multinomial_gof(suicides, probabilities * sum(suicides))
##########
# #37
##########
deaths <- c(1668, 1407, 1370, 1309, 1341, 1338, 1406, 1446, 1332, 1363, 1410, 1526)
probabilities <- rep(sum(deaths) / 12, 12)
multinomial_gof(deaths, probabilities)
##########
# #45
##########
bin_prob <- function(trials, prob){
comb <- 0
for(i in 0:12){
comb[i+1] <- choose(trials, i)
comb[i+1] <- comb[i+1] * (prob ^ i) * (1 - prob) ^ (12 - i)
}
return(comb)
}
probabilities <- bin_prob(12, .5)
genders <- c(7, 45, 181, 478, 829, 1112, 1343, 1033, 670, 286, 104, 24, 3)
multinomial_gof(genders, probabilities * sum(genders))
##########
# #55
##########
#a
x_values <- seq(from=0, to=10, length.out=100)
size_25 <- rnorm(n = 25)
qqplot(x_values, size_25)
title(main = "sample size = 25, normal")
size_100 <- rnorm(n = 100)
qqplot(x_values, size_100)
title(main = "sample size = 100, normal")
size_25 <- rchisq(n = 25)
qqplot(x_values, size_25)
title(main = "sample size = 25, chi-square")
size_25 <- rchisq(n = 25, df = 10)
qqplot(x_values, size_25)
title(main = "sample size = 25, chi-square")
size_50 <- rchisq(n = 50, df = 10)
qqplot(x_values, size_50)
title(main = "sample size = 50, chi-square")
size_100 <- rchisq(n = 100, df = 10)
qqplot(x_values, size_100)
title(main = "sample size = 100, chi-square")
size_25 <- rnorm(n = 25) / runif(0,1,n = 25)
qqplot(x_values, size_25)
title(main = "sample size = 25, normal")
size_25 <- rnorm(n = 25) / runif(0,1,n = 25)
qqplot(x_values, size_25)
title(main = "sample size = 25, normal")
size_25 <- rnorm(n = 25) / runif(0,1,n = 25)
qqplot(x_values, size_25)
title(main = "sample size = 25, normal")
size_25 <- rnorm(n = 25) / runif(0,1,n = 25)
qqplot(x_values, size_25)
title(main = "sample size = 25, normal")
size_25 <- rnorm(n = 25) / runif(0,1,n = 25)
qqplot(x_values, size_25)
title(main = "sample size = 25, normal")
size_25 <- rnorm(n = 25) / runif(0,1,n = 25)
qqplot(x_values, size_25)
title(main = "sample size = 25, normal")
size_25 <- rnorm(n = 25) / runif(0,1,n = 25)
qqplot(x_values, size_25)
title(main = "sample size = 25, normal")
size_25 <- rnorm(n = 25) / runif(0,1,n = 25)
qqplot(x_values, size_25)
title(main = "sample size = 25, normal")
size_25 <- rnorm(n = 25) / runif(0,1,n = 25)
qqplot(x_values, size_25)
title(main = "sample size = 25, normal")
size_25 <- rnorm(n = 25) / runif(0,1,n = 25)
qqplot(x_values, size_25)
title(main = "sample size = 25, normal")
size_25 <- rnorm(n = 25) / runif(0,1,n = 25)
qqplot(x_values, size_25)
title(main = "sample size = 25, normal")
size_25 <- rnorm(n = 25) / runif(0,1,n = 25)
qqplot(x_values, size_25)
title(main = "sample size = 25, normal")
size_25 <- rnorm(n = 25) / runif(0,1,n = 25)
qqplot(x_values, size_25)
title(main = "sample size = 25, normal")
size_25 <- rnorm(n = 25) / runif(0,1,n = 25)
qqplot(x_values, size_25)
title(main = "sample size = 25, normal")
probabilities <- bin_prob(12, .5)
probabilities
sum(genders)
multinomial_gof(genders, probabilities * sum(genders))
multinomial_gof <- function(data, expected){
total <- 0
for(i in 1:length(data)){
sq_diff[i] <- data[i] - expected[i]
sq_diff[i] <- sq_diff[i] ^ 2
sq_diff[i] <- sq_diff[i] / expected[i]
total <- total + sq_diff[i]
}
print(sq_diff)
return(total)
}
multinomial_gof(genders, probabilities * sum(genders))
multinomial_gof <- function(data, expected){
total <- 0
sq_diff <- 0
for(i in 1:length(data)){
sq_diff[i] <- data[i] - expected[i]
sq_diff[i] <- sq_diff[i] ^ 2
sq_diff[i] <- sq_diff[i] / expected[i]
total <- total + sq_diff[i]
}
print(sq_diff)
return(total)
}
multinomial_gof(genders, probabilities * sum(genders))
probabilities[1] * 6115
7 - 1.49292
5.50708 ^2
30.32793 / 1.49292
beeswax <- c(14.27, 14.8, 12.28, 17.09, 15.10, 12.92, 15.56, 15.38,
15.15, 13.98, 14.9, 15.91, 14.52, 15.63, 13.83, 13.66,
13.98, 14.47, 14.65, 14.73, 15.18, 14.49, 14.56, 15.03,
15.4, 14.68, 13.33, 14.41, 14.19, 15.21, 14.75, 14.41,
14.04, 13.68, 15.31, 14.32, 13.64, 14.77, 14.3, 14.62,
14.1, 15.47, 13.73, 13.65, 15.02, 14.01, 14.92, 15.47,
13.75, 14.87, 15.28, 14.43, 13.96, 14.57, 15.49, 15.13,
14.23, 14.44, 14.57)
ecdf(beeswax)
plot(ecdf(beeswax), verticals=TRUE, do.points=FALSE)
hist(beeswax)
qqplot(beeswax)
x_seq <- seq(0,1, length.out = 100)
qqplot(x_seq, beeswax)
title(main = "Normality of Hydrocarbon Levels")
length(beeswax)
plot((1:59)/60, beeswax)
plot((1:59)/60, sort(beeswax))
qqplot(x_seq, beeswax)
title(main = "Normality of Hydrocarbon Levels")
?quantile
quantile(beeswax)
quantile(beeswax, probs = c(.1, .25, .5, .75, .9))
?rep
bearings <- data.frame(type = rep(c(1,2), each = 10),
fail = c(3.03, 5.53, 5.6, 9.3, 9.92,
12.51, 12.95, 15.21, 16.04, 16.84
3.19, 4.26, 4.47, 4.53, 4.67,
4.69, 12.78, 6.79, 9.37, 12.75))
bearings <- data.frame(type = rep(c(1,2), each = 10),
fail = c(3.03, 5.53, 5.6, 9.3, 9.92,
12.51, 12.95, 15.21, 16.04, 16.84,
3.19, 4.26, 4.47, 4.53, 4.67,
4.69, 12.78, 6.79, 9.37, 12.75))
bearings <- data.frame(type = rep(c("I","II"), each = 10),
fail = c(3.03, 5.53, 5.6, 9.3, 9.92,
12.51, 12.95, 15.21, 16.04, 16.84,
3.19, 4.26, 4.47, 4.53, 4.67,
4.69, 12.78, 6.79, 9.37, 12.75))
mean(bearings[bearings$type == "I", fail])
mean(bearings[bearings$type == "I", "fail"])
mean(bearings[bearings$type == "II", "fail"])
sd(bearings[bearings$type == "I", "fail"])
sd(bearings[bearings$type == "II", "fail"])
10.693-6.75
sqrt(.4819 + .3602)
3.943 / .9177
bearings$diff <- bearings[bearings$type == "I", "fail"] -
bearings[bearings$type == "II", "fail"]
mean(bearings$diff)
sd(bearings$diff)
3.943 / 3.095889
qt(1.273624, df = 9)
qt(p = 1.273624, df = 9)
?qt
pt(p = 1.273624, df = 9)
pt(q = 1.273624, df = 9)
1 - .8826478
sd(bearings[,"fail"])
mean(bearings[bearings$type == "I", "fail"])
mean(bearings[bearings$type == "II", "fail"])
mean(bearings[bearings$type == "I", "fail"])-
mean(bearings[bearings$type == "II", "fail"])
4.6087 * sqrt(1/5)
3.943/2.061
pt(1.913, df = 9)
1 - .9559811
rank(bearings[,"fail"])
wilcox.test(bearings[,"fail"])
wilcox.test(bearings[,"fail"])
sum(rank(bearings[,"fail"])[1,10])
sum(rank(bearings[,"fail"])[1:10])
25 / 13.22
pt(1.891074, df = 9)
1 - .9544102
pnorm(1.891074)
1 - .9706928
sum(rank(bearings[,"fail"])[11:20])
80 - 105
0.0293072 * 2
count <- 0
for(i in 1:10){
for(j in 11:20){
if(bearings[i,2] > bearings[j,2]){
count += 1
}
}
}
count <- 0
for(i in 1:10){
for(j in 11:20){
if(bearings[i,2] > bearings[j,2]){
count <- count + 1
}
}
}
mice <- data.frame(field = rep(c("Present", "Absent"), each = 10),
weight = 22.8, 10.2, 20.8, 27, 19.2,
9, 14.2, 19.8, 14.5, 14.8,
23.5, 31, 19.5, 26.2, 26.5,
25.2, 24.5, 23.8, 27.8, 22)
View(mice)
mice <- data.frame(field = rep(c("Present", "Absent"), each = 10),
weight = c(22.8, 10.2, 20.8, 27, 19.2,
9, 14.2, 19.8, 14.5, 14.8,
23.5, 31, 19.5, 26.2, 26.5,
25.2, 24.5, 23.8, 27.8, 22))
mice$diff <- mice[mice$field == "Present", "weight"] -
mice[mice$field == "Absent", "weight"]
mean(mice$diff)
pt(1.913, df = 19)
1 - pt(1.913, df = 19)
sd(mice$diff)
2.262 * 7.242 / sqrt(10)
7.7 + 5.18
7.7-5.18
7.7 / (7.242 / sqrt(10))
pt(3.362267, df = 9)
1-pt(3.362267, df = 9)
rank(mice$weight)
sum(rank(mice$weight)[1:10])
67 - 105
38 / 13.22
pt(2.874433, df = 9)
1 - .9908282
.0091718 * 2
median(mice[mice$field == "Present", "weight"]) - median(mice[mice$field == "Absent", "weight"])
median(mice[mice$field == "Present", "weight"])
median(mice[mice$field == "Absent", "weight"])
?pf
pnorm(.84)
speeds <- c(16.27,
18.58,
22.05,
18.94,
18.67,
36.71,
43.95,
39.55,
38.59,
45.53,
19.45,
15.31,
26.99,
23.72,
30.52,
56.56,,
68.25,
58.66,
51.2,
43.61,
3.06,
6.03,
2.87,
1.88,
3.72,
13.56,
49.37,
24.8,
9.84,
20.93)
speeds <- c(16.27,
18.58,
22.05,
18.94,
18.67,
36.71,
43.95,
39.55,
38.59,
45.53,
19.45,
15.31,
26.99,
23.72,
30.52,
56.56,
68.25,
58.66,
51.2,
43.61,
3.06,
6.03,
2.87,
1.88,
3.72,
13.56,
49.37,
24.8,
9.84,
20.93)
sd(speeds)
var(speeds)
pf(q = 2, df1 = 2, df2 = 8, ncp = 2 * 2 / 1)
pf(q = 5, df1 = 2, df2 = 8, ncp = 2 * 2 / 1)
pf(q = 8, df1 = 2, df2 = 8, ncp = 2 * 2 / 1)
pf(q = 12, df1 = 2, df2 = 8, ncp = 2 * 2 / 1)
pf(q = 111.5, df1 = 2, df2 = 8, ncp = 2 * 2 / 1)
pf(q = 11.5, df1 = 2, df2 = 8, ncp = 2 * 2 / 1)
pf(q = 11.6, df1 = 2, df2 = 8, ncp = 2 * 2 / 1)
pf(q = 11.7, df1 = 2, df2 = 8, ncp = 2 * 2 / 1)
pf(q = 11.75, df1 = 2, df2 = 8, ncp = 2 * 2 / 1)
pf(q = 11.79, df1 = 2, df2 = 8, ncp = 2 * 2 / 1)
pf(q = 11.85, df1 = 2, df2 = 8, ncp = 2 * 2 / 1)
var(speeds)
var(speeds[1:10])
var(speeds[11:20])
var(speeds[12:30])
?power.anova.test
mean(speeds)
mean(speeds[1:10])
mean(speeds[11:20])
mean(speeds[21:30])
2*16^2
16^2
sacred_foundry_29Apr16 <- c(11.25,11.49,11.39,11,12.03,10.10,12.2,11.73,9.25,12.29,11.36,10.4,11.48,11.5,12.52,12.52,11.55,11.9,11.85,11.62,11.88,11.67,12.75,12.33,12.32,11.95,12.95,12.95,12.91,12.16,12.98,11.99,11.99,11.99,11.5,12.51,12.52,12.99,12.09,12.21,12.54,13.24,12.25,12.5,12.78,13.33,11.87,12.9,11.9,12.93,13.44,12.5,13.49,13.49,11,12.55,13.5,12.59,13.63,13.65,13.19,13.71,12.87,12.81,11.87,13.87,12.9,13.2,13.23,13.94,13.94,10.95,13.46,13.95,13.95,12.99,11,13.24,13.58,12.59,13.61,13.13,14.25,14.25,13.49,12.36,13.43,13.77,13.47,13.49,13.49,14,13.5,13.5,11.53,13.89,13.93,14.17,14.2,14.75,13.8,14.3,13.32,11.84,14.85,12.28,13.91,13.93,14.94,14.95,14.95,13.99,11.99,14.99,14.24,14.13,14.05,13.17,14.18,14.18,14.29,13.29,15.33,13.86,14.88,14.39,14.42,14.98,12.46,14.97,13.49,15.03,13.55,12.63,14.66,14.95,14.95,12.94,14.95,13.45,13.45,15.97,13.99,13,16.08,14.59,13.58,13.22,14.24,15.99,15.99,13.29,15.82,14.07,16.4,15.72,13.44,13.46,13.5,14.53,14.05,13.57,13.58,14.69,14.82,14.21,14.37,13.89,14.29,13.9,13.9615.99,16.48,14.25,16.63,14.22,16.57,14.28,14.48,16.49,15.29,17.5,15.03,15.46,15.82,16.66,17.58,17.59)
sacred_foundry_29Apr16 <- c(11.25,11.49,11.39,11,12.03,10.10,12.2,11.73,9.25,12.29,11.36,10.4,11.48,11.5,12.52,12.52,11.55,11.9,11.85,11.62,11.88,11.67,12.75,12.33,12.32,11.95,12.95,12.95,12.91,12.16,12.98,11.99,11.99,11.99,11.5,12.51,12.52,12.99,12.09,12.21,12.54,13.24,12.25,12.5,12.78,13.33,11.87,12.9,11.9,12.93,13.44,12.5,13.49,13.49,11,12.55,13.5,12.59,13.63,13.65,13.19,13.71,12.87,12.81,11.87,13.87,12.9,13.2,13.23,13.94,13.94,10.95,13.46,13.95,13.95,12.99,11,13.24,13.58,12.59,13.61,13.13,14.25,14.25,13.49,12.36,13.43,13.77,13.47,13.49,13.49,14,13.5,13.5,11.53,13.89,13.93,14.17,14.2,14.75,13.8,14.3,13.32,11.84,14.85,12.28,13.91,13.93,14.94,14.95,14.95,13.99,11.99,14.99,14.24,14.13,14.05,13.17,14.18,14.18,14.29,13.29,15.33,13.86,14.88,14.39,14.42,14.98,
12.46,14.97,13.49,15.03,13.55,12.63,14.66,14.95,14.95,12.94,14.95,13.45,13.45,15.97,13.99,13,16.08,14.59,13.58,13.22,14.24,15.99,15.99,13.29,15.82,14.07,16.4,15.72,13.44,13.46,13.5,14.53,14.05,
13.57,13.58,14.69,14.82,14.21,14.37,13.89,14.29,13.9,13.9615.99,16.48,14.25,16.63,14.22,16.57,14.28,14.48,16.49,15.29,17.5,15.03,15.46,15.82,16.66,17.58,17.59)
sacred_foundry_29Apr16 <- c(11.25,11.49,11.39,11,12.03,10.10,12.2,11.73,9.25,12.29,11.36,10.4,11.48,11.5,12.52,12.52,11.55,11.9,11.85,11.62,11.88,11.67,12.75,12.33,12.32,11.95,12.95,12.95,12.91,12.16,12.98,11.99,11.99,11.99,11.5,12.51,12.52,12.99,12.09,12.21,12.54,13.24,12.25,12.5,12.78,13.33,11.87,12.9,11.9,12.93,13.44,12.5,13.49,13.49,11,12.55,13.5,12.59,13.63,13.65,13.19,13.71,12.87,12.81,11.87,13.87,12.9,13.2,13.23,13.94,13.94,10.95,13.46,13.95,13.95,12.99,11,13.24,13.58,12.59,13.61,13.13,14.25,14.25,13.49,12.36,13.43,13.77,13.47,13.49,13.49,14,13.5,13.5,11.53,13.89,13.93,14.17,14.2,14.75,13.8,14.3,13.32,11.84,14.85,12.28,13.91,13.93,14.94,14.95,14.95,13.99,11.99,14.99,14.24,14.13,14.05,13.17,14.18,14.18,14.29,13.29,15.33,13.86,14.88,14.39,14.42,14.98,
12.46,14.97,13.49,15.03,13.55,12.63,14.66,14.95,14.95,12.94,14.95,13.45,13.45,15.97,13.99,13,16.08,14.59,13.58,13.22,14.24,15.99,15.99,13.29,15.82,14.07,16.4,15.72,13.44,13.46,13.5,14.53,14.05,
13.57,13.58,14.69,14.82,14.21,14.37,13.89,14.29,13.9,13.96,15.99,16.48,14.25,16.63,14.22,16.57,14.28,14.48,16.49,15.29,17.5,15.03,15.46,15.82,16.66,17.58,17.59)
mean(sacred_foundry_29Apr16)
sd(sacred_foundry_29Apr16)
var(sacred_foundry_29Apr16)
??import
?array
dat = data.frame("x" = [1:10],
"y" = [2:11])
dat = data.frame("x" = c(1,2,3,4,5,6,7,8,9,10),
"y" = c(1,4,9,4,1,4,9,4,1,4))
plot(dat[,"x"], dat[,"y"])
title("Scatterplot of x vs y")
plot(dat[,"x"], dat[,"y"], xlab = "x", ylab = "y")
title("Scatterplot of x vs y")
library("ggplot2", lib.loc="~/R/win-library/3.2")
detach("package:ggplot2", unload=TRUE)
library(readr)
advertising <- read.csv('../data/Advertising.csv')
ad_reg <- lm(formula = Sales ~ TV, data = advertising)
setwd("~/Berkeley/Fall 2016/Stat159/stat159-fall2016-hw02/code")
advertising <- read.csv('../data/Advertising.csv')
ad_reg <- lm(formula = Sales ~ TV, data = advertising)
ad_summ <- summary(ad_reg)
plot(advertising$TV, advertising$Sales)
plot(ad_reg)
plot(ad_summ)
abline(ad_reg)
plot(advertising$TV, advertising$Sales)
abline(ad_reg)
abline(ad_reg, col = "blue")
plot(advertising$TV, advertising$Sales,
main = "Scatterplot of TV Budget vs Sales",
xlab = "TV Budget (in thousands of dollars)",
ylab = "Sales (in thousands of units)")
plot(advertising$TV, advertising$Sales,
main = "Scatterplot of TV Budget vs Sales",
xlab = "TV Budget (in thousands of dollars)",
ylab = "Sales (in thousands of units)",
col = "green")
plot(advertising$TV, advertising$Sales,
main = "Scatterplot of TV Budget vs Sales",
xlab = "TV Budget (in thousands of dollars)",
ylab = "Sales (in thousands of units)")
abline(ad_reg, col = "blue")
sink()
tv_summ <- summary(advertising$TV)
sales_summ <- summary(advertising$Sales)
#build eda-output.txt file
sink("../data/eda-output.txt", append = T)
cat(c("Summary Statistics for TV\n"),
file = "../data/eda-output.txt", sep = "\n")
tv_summ
cat("\nSummary Statistics for Sales\n",
file = "../data/eda-output.txt", sep = "\n", append = T)
sales_summ
sink()
sink()
ad_reg <- lm(formula = Sales ~ TV, data = advertising)
ad_summ <- summary(ad_reg)
ad_summ
ad_summ["Coefficients"]
ad_summ[4]
ad_summ[ad_summ$coefficients]
ad_summ[4]
